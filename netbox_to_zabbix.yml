---
- name: Sync NetBox devices/VMs to Zabbix (CF groups, extra templates, robust tags)
  hosts: all
  gather_facts: false

  vars:
    zabbix_api_url: "{{ lookup('env', 'ZABBIX_API_URL') }}"
    zabbix_api_token: "{{ lookup('env', 'ZABBIX_API_TOKEN') }}"
    apply_changes: false

  tasks:
    # ---------------- Preconditions ----------------
    - name: Verify required env vars present
      assert:
        that:
          - zabbix_api_url is defined and zabbix_api_url | length > 0
          - zabbix_api_token is defined and zabbix_api_token | length > 0
        fail_msg: "ZABBIX_API_URL and/or ZABBIX_API_TOKEN are missing."

    - name: Ensure Zabbix template name is defined
      assert:
        that:
          - zabbix_template_name is defined
          - zabbix_template_name | length > 0
        fail_msg: "Missing Zabbix template name for {{ inventory_hostname }}"

    # ---------------- Primary template lookup ----------------
    - name: Lookup primary Zabbix template ID by exact name
      uri:
        url: "{{ zabbix_api_url }}"
        method: POST
        headers: { Content-Type: "application/json" }
        body_format: json
        body:
          jsonrpc: "2.0"
          method: "template.get"
          params:
            output: ["templateid", "host"]
            filter:
              host: ["{{ zabbix_template_name }}"]
          auth: "{{ zabbix_api_token }}"
          id: 1
        validate_certs: false
      delegate_to: localhost
      register: zabbix_template_lookup
      failed_when:
        - zabbix_template_lookup.json.result | length == 0
        - zabbix_template_lookup.json.result | length > 1

    - name: Set primary template ID
      set_fact:
        template_id: "{{ zabbix_template_lookup.json.result[0].templateid }}"

    # ---------------- Normalize extra_zabbix_templates ----------------
    - name: Normalize extra_zabbix_templates to a clean name list
      set_fact:
        _raw_extra_tpls: "{{ extra_zabbix_templates | default([]) }}"
        _extra_tpl_names: >-
          {%- set out = [] -%}
          {%- if _raw_extra_tpls is string -%}
            {%- set s = _raw_extra_tpls
                        | replace('[',' ')
                        | replace(']',' ')
                        | replace('"',' ')
                        | replace("'",' ')
                        | replace(';', ',') -%}
            {%- for part in s.split(',') -%}
              {%- set name = part | trim -%}
              {%- if name|length > 0 -%}
                {%- set _ = out.append(name) -%}
              {%- endif -%}
            {%- endfor -%}
          {%- elif _raw_extra_tpls is sequence -%}
            {%- for x in _raw_extra_tpls -%}
              {%- if x is string and x|trim|length > 0 -%}
                {%- set _ = out.append(x|trim) -%}
              {%- elif x is mapping and x.name is defined and (x.name|string)|trim|length > 0 -%}
                {%- set _ = out.append((x.name|string)|trim) -%}
              {%- endif -%}
            {%- endfor -%}
          {%- endif -%}
          {{ out }}
      changed_when: false

    # ---------------- Lookup extra template IDs ----------------
    - name: Lookup extra Zabbix template IDs
      uri:
        url: "{{ zabbix_api_url }}"
        method: POST
        headers: { Content-Type: "application/json" }
        body_format: json
        body:
          jsonrpc: "2.0"
          method: "template.get"
          params:
            output: ["templateid", "host"]
            filter:
              host: "{{ _extra_tpl_names }}"
          auth: "{{ zabbix_api_token }}"
          id: 1
        validate_certs: false
      delegate_to: localhost
      register: zbx_extra_tpl_lookup
      when: _extra_tpl_names | length > 0

    # ---------------- Build full template list ----------------
    - name: Build full template id set (primary + extras)
      set_fact:
        _template_ids_full: >-
          {%- set ids = [ (template_id|string) ] -%}
          {%- if zbx_extra_tpl_lookup is defined and zbx_extra_tpl_lookup.json.result is defined -%}
            {%- for t in zbx_extra_tpl_lookup.json.result -%}
              {%- if t.templateid is defined -%}
                {%- set _ = ids.append(t.templateid|string) -%}
              {%- endif -%}
            {%- endfor -%}
          {%- endif -%}
          {{ ids | unique }}

    - name: Build template objects (for use in create/update)
      set_fact:
        _template_objs: >-
          {%- set out = [] -%}
          {%- for id in _template_ids_full -%}
            {%- set _ = out.append({'templateid': (id|string)}) -%}
          {%- endfor -%}
          {{ out }}

    # ---------------- Get existing host (must be before decision logic) ----------------
    - name: Get existing host (with interfaces)
      uri:
        url: "{{ zabbix_api_url }}"
        method: POST
        headers: { Content-Type: "application/json" }
        body_format: json
        body:
          jsonrpc: "2.0"
          method: "host.get"
          params:
            output: ["hostid", "name", "status"]
            selectInterfaces: ["interfaceid", "ip", "main", "type", "useip", "dns", "port"]
            filter:
              host: ["{{ inventory_hostname }}"]
          auth: "{{ zabbix_api_token }}"
          id: 1
        validate_certs: false
      delegate_to: localhost
      register: zabbix_host_check

    - name: Normalize host.get result into booleans
      set_fact:
        host_exists: >-
          {{
            (zabbix_host_check is defined)
            and (zabbix_host_check.json is defined)
            and (zabbix_host_check.json.result is defined)
            and ((zabbix_host_check.json.result | length | int) > 0)
          }}
        host_missing: "{{ not host_exists }}"

    # ---------------- Build params for create/update ----------------
    - name: Build Zabbix host create params
      set_fact:
        zabbix_create_params:
          host: "{{ inventory_hostname }}"
          name: "{{ inventory_hostname }}"
          status: 0
          interfaces: []
          groups:
            - groupid: 5
          templates: "{{ _template_objs }}"
          tags: []
      when: host_missing | bool

    - name: Build Zabbix host update params
      set_fact:
        zabbix_update_params:
          hostid: "{{ zabbix_host_check.json.result[0].hostid }}"
          name: "{{ inventory_hostname }}"
          status: 0
          groups:
            - groupid: 5
          templates: "{{ _template_objs }}"
          tags: []
      when: host_exists | bool

    # ---------------- Create or update in Zabbix ----------------
    - name: Create new host
      uri:
        url: "{{ zabbix_api_url }}"
        method: POST
        headers: { Content-Type: "application/json" }
        body_format: json
        body:
          jsonrpc: "2.0"
          method: "host.create"
          params: "{{ zabbix_create_params }}"
          auth: "{{ zabbix_api_token }}"
          id: 1
        validate_certs: false
      delegate_to: localhost
      when:
        - host_missing | bool
        - apply_changes | bool

    - name: Update existing host
      uri:
        url: "{{ zabbix_api_url }}"
        method: POST
        headers: { Content-Type: "application/json" }
        body_format: json
        body:
          jsonrpc: "2.0"
          method: "host.update"
          params: "{{ zabbix_update_params }}"
          auth: "{{ zabbix_api_token }}"
          id: 1
        validate_certs: false
      delegate_to: localhost
      when:
        - host_exists | bool
        - apply_changes | bool

    - name: Dry-run notice
      debug:
        msg: "apply_changes=false: No changes pushed to Zabbix for {{ inventory_hostname }}."
      when: not apply_changes | bool
